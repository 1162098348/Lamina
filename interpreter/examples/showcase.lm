# Lamina Language Showcase
# Demonstrating all implemented features

print("=== LAMINA LANGUAGE SHOWCASE ===\n")

# 1. Basic Data Types
print("1. BASIC DATA TYPES")
var int_num = 42
var float_num = 3.14159
var bool_true = true
var bool_false = false
var string_val = "Hello, Lamina!"
var null_val = null

print("Integer:", int_num)
print("Float:", float_num)
print("Boolean (true):", bool_true)
print("Boolean (false):", bool_false)
print("String:", string_val)
print("Null:", null_val, "\n")

# 2. Array and Matrix Literals
print("2. ARRAYS AND MATRICES")
var vector = [1, 2, 3, 4, 5]
var matrix_2x2 = [[1, 2], [3, 4]]
var matrix_3x3 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

print("Vector:", vector)
print("2x2 Matrix:", matrix_2x2)
print("3x3 Matrix:", matrix_3x3, "\n")

# 3. Arithmetic Operations
print("3. ARITHMETIC OPERATIONS")
print("Addition: 15 + 7 =", 15 + 7)
print("Subtraction: 15 - 7 =", 15 - 7)
print("Multiplication: 6 * 7 =", 6 * 7)
print("Division: 15 / 4 =", 15 / 4)
print("Integer Division: 15 // 4 =", 15 // 4)
print("Modulo: 15 % 4 =", 15 % 4)
print("Power: 2 ^ 4 =", 2 ^ 4, "\n")

# 4. Comparison Operations
print("4. COMPARISON OPERATIONS")
print("Equal: 10 == 10 →", 10 == 10)
print("Not Equal: 10 != 5 →", 10 != 5)
print("Greater: 10 > 5 →", 10 > 5)
print("Less: 5 < 10 →", 5 < 10)
print("Greater Equal: 10 >= 10 →", 10 >= 10)
print("Less Equal: 5 <= 10 →", 5 <= 10, "\n")

# 5. Vector Operations
print("5. VECTOR OPERATIONS")
var v1 = [3, 4, 0]
var v2 = [1, 2, 5]

print("Vector 1:", v1)
print("Vector 2:", v2)
print("Vector Addition: v1 + v2 =", v1 + v2)
print("Scalar Multiplication: 3 * v1 =", 3 * v1)
print("Dot Product: dot(v1, v2) =", dot(v1, v2))
print("Cross Product: cross(v1, v2) =", cross(v1, v2))
print("Vector Norm: norm(v1) =", norm(v1))
print("Normalize v1:", normalize(v1), "\n")

# 6. Matrix Operations
print("6. MATRIX OPERATIONS")
var mat = [[2, 3], [1, 4]]
print("Matrix:", mat)
print("Determinant: det(mat) =", det(mat), "\n")

# 7. Mathematical Functions
print("7. MATHEMATICAL FUNCTIONS")
print("Square Root: sqrt(25) =", sqrt(25))
print("Absolute Value: abs(-15) =", abs(-15))
print("Sine: sin(0) =", sin(0))
print("Cosine: cos(0) =", cos(0))
print("Natural Log: log(2.718) =", log(2.718))
print("Round: round(3.7) =", round(3.7))
print("Floor: floor(3.7) =", floor(3.7))
print("Ceiling: ceil(3.2) =", ceil(3.2), "\n")

# 8. Control Flow
print("8. CONTROL FLOW")

# If-else statements
var x = 15
if (x > 10) {
    print("x is greater than 10")
} else {
    print("x is not greater than 10")
}

# While loop with break/continue
print("While loop with break and continue:")
var i = 0
while (i < 10) {
    i = i + 1
    if (i == 3) {
        print("Skipping", i)
        continue
    }
    if (i == 7) {
        print("Breaking at", i)
        break
    }
    print("Loop:", i)
}
print("")

# 9. Functions
print("9. USER-DEFINED FUNCTIONS")

func fibonacci(n) {
    if (n <= 1) {
        return n
    }
    return fibonacci(n - 1) + fibonacci(n - 2)
}

func vector_distance(v1, v2) {
    var diff = v1 + (-1 * v2)  # v1 - v2
    return norm(diff)
}

print("Fibonacci(6) =", fibonacci(6))
print("Distance between [1,2] and [4,6] =", vector_distance([1, 2], [4, 6]), "\n")

# 10. String Operations and Utilities
print("10. STRING OPERATIONS AND UTILITIES")
var text = "Programming in Lamina\nis fun!"
print("Text with newline:")
print(text)
print("Length of 'Hello':", size("Hello"))
print("Size of vector [1,2,3,4,5]:", size([1, 2, 3, 4, 5]))
print("Size of matrix [[1,2],[3,4]]:", size([[1, 2], [3, 4]]), "\n")

# 11. Complex Expressions
print("11. COMPLEX EXPRESSIONS")
var complex_result = sqrt(dot([3, 4], [3, 4]))
print("sqrt(dot([3,4], [3,4])) =", complex_result)

var angle = 3.14159 / 6  # 30 degrees in radians
print("sin(π/6) =", sin(angle))
print("cos(π/6) =", cos(angle))

print("\n=== SHOWCASE COMPLETE ===")
print("Lamina supports all major programming constructs!")
print("- Rich type system (int, float, bool, string, array, matrix)")
print("- Comprehensive mathematical operations")
print("- Control flow (if/else, while, break/continue)")
print("- User-defined and built-in functions")
print("- Vector and matrix computations")
print("- String processing with escape sequences")
